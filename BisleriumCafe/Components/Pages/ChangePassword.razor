@page "/changepassword"
<nav class="navbar navbar-light bg-black justify-content-center" >
    <h1 class="navbar-brand mb-0 h1" style="color:#00bec3">Change Password</h1>
</nav>
<div class="form-body">
    <div class="form-container">
        @if (globalState.CurrentUser != null && globalState.CurrentUser.HasInitialPassword)
        {
            <AlertMessage Type="warning" Message="You are using the initial password. Please change it." />
        }
        <form class="text-center" @onsubmit="ChangePasswordHandler">
            <div class="form-floating">
                <input type="password" class="form-control currentpassword" @bind="currentPassword"
                       placeholder="Current Password" style="background-color:#7e4000" />
                <label for="floatingInput">Current Password</label>
            </div>
            <div class="form-floating mb-3">
                <input type="password" class="form-control newpassword" @bind="newPassword"
                       placeholder="New Password" style="background-color:#7e4000"/>
                <label for="floatingPassword">New Password</label>
            </div>
            
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <AlertMessage Type="danger" Message="@errorMessage" />
            }
            <button class="w-100 btn btn-lg btn-primary" type="submit">
                <span class="oi oi-check"></span> Submit
            </button>
        </form>
    </div>
</div>

@code {
    [CascadingParameter]
    private GlobalState globalState { get; set; }
    private string currentPassword { get; set; }
    private string newPassword { get; set; }
    private string errorMessage = "";
    private string successMessage = "";
    public EventCallback LogoutHandler { get; set; }
  


    protected override void OnInitialized()
    {
        errorMessage = "";
        successMessage = "";
    }

    private void ChangePasswordHandler()
    {
        try
        {
            errorMessage = "";
            successMessage = "";
            globalState.CurrentUser = UserServices.ChangePassword(globalState.CurrentUser.Id, currentPassword, newPassword);
            currentPassword = "";
            newPassword = "";
            successMessage = "The password has been changed successfully.";
            globalState.CurrentUser = null;
            NavManager.NavigateTo("/login/" + successMessage);

        }
        catch (Exception e)
        {
            errorMessage = e.Message;
        }
    }


}
